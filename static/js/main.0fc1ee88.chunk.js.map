{"version":3,"sources":["context/alerts/alertContext.js","context/authentication/authContext.js","components/auth/Login.js","components/auth/NewAccount.js","context/projects/projectContext.js","components/projects/NewProject.js","context/tasks/taskContext.js","components/projects/SingleProject.js","components/projects/ListProjects.js","components/layout/Sidebar.js","components/layout/Bar.js","components/tasks/FormTask.js","components/tasks/Task.js","components/tasks/ListTask.js","components/projects/Projects.js","types/index.js","context/projects/projectReducer.js","config/axios.js","context/projects/ProjectState.js","context/tasks/TaskReducer.js","context/tasks/TaskState.js","context/alerts/alertReducer.js","context/alerts/alertState.js","context/authentication/authReducer.js","config/tokenAuth.js","context/authentication/authState.js","components/routes/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["alertContext","createContext","authContext","Login","props","useContext","AlertContext","alert","showAlert","AuthContext","authenticate","messagge","logIn","registerUser","useEffect","history","push","msg","category","useState","email","password","user","saveUser","handleChange","e","target","name","value","console","log","process","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","onChange","to","onClick","demoId","localStorage","getItem","uuidv4","setItem","NewAccount","updateUser","confirm","isEmail","completePassword","matchPassword","length","position","i","charAt","demoEmail","removeItem","projectContext","NewProject","projectsContext","form","errorform","showForm","addProject","showError","project","saveProject","taskContext","SingleProjects","actualProject","getTasks","_id","ListProjects","projects","getProjects","TransitionGroup","map","CSSTransition","timeout","SingleProject","Sidebar","Bar","logOut","FormTask","tasksContext","errortask","selectedtask","addTask","validateTask","updateTask","task","saveTask","projectId","Task","deleteTask","saveActualTask","changeState","state","ListTask","deleteProject","projecttasks","Projects","authenticateUser","FORM_PROJECT","GET_PROJECTS","ADD_PROJECT","VALIDATE_FORM","ACTUAL_PROJECT","DELETE_PROJECT","PROJECT_ERROR","TASK_PROJECT","ADD_TASK","VALIDATE_TASK","DELETE_TASK","ACTUAL_TASK","MODIFY_TASK","SHOW_ALERT","HIDE_ALERT","SUCCESSFUL_REGISTRATION","ERROR_REGISTRATION","GET_USER","UPDATE_USER","SUCCESSFUL_LOGIN","ERROR_LOGIN","LOG_OUT","action","payload","filter","clientAxios","axios","create","baseURL","ProjectState","useReducer","projectReducer","dispatch","a","get","response","data","post","delete","Provider","children","TaskState","TaskReducer","params","tasks","taskId","put","AlertState","alertReducer","setTimeout","token","loading","tokenAuth","defaults","headers","common","AuthState","initialState","AuthReducer","errors","PrivateRoute","Component","component","AutchContext","render","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fc1ee88.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertContext from '../../context/alerts/alertContext';\nimport AuthContext from '../../context/authentication/authContext';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Login = (props) => {\n\n    // Extract the values from context\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlert } = alertContext;\n\n    // Extract values for authentication\n    const authContext = useContext(AuthContext);\n    const { authenticate, messagge, logIn, registerUser } = authContext;\n\n    // Keep track of changes in messagge\n    useEffect(() => {\n        if(authenticate) {\n            props.history.push('/projects');\n        }\n        if(messagge) {\n            showAlert(messagge.msg, messagge.category);\n        }\n        // eslint-disable-next-line\n    }, [authenticate, messagge, props.history]);\n\n    // State for login\n    const [ user, saveUser ] = useState({\n        email: '',\n        password: '',\n    });\n\n    // Extract user\n    const { email, password } = user;\n\n    // To keep track of user input\n    const handleChange = e => {\n        saveUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    // Know if it is demo account\n    const handleDemo = () => {\n        let demoId = localStorage.getItem('demo-account');\n        \n        if (demoId) {\n            logIn({ email:demoId, password:'password' });\n            return;\n        }\n\n        demoId = uuidv4();\n\n        registerUser({\n            name:\"Demo User\",\n            email:`${demoId}@email.com`, \n            password:\"password\"\n        });\n        localStorage.setItem('demo-account', `${demoId}@email.com`);\n    }\n\n    // when user wants to login\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        // Validation of empty fields\n        if(email.trim() === '' || password.trim() === '') {\n            showAlert('All fields are mandatory', 'alerta-error');\n        }\n        // Pass the value\n        logIn({ email, password });\n    }\n    \n    console.log(`You are in ${process.env.NODE_ENV}`);\n\n    return ( \n        <div className=\"form-usuario\">\n            { alert ? ( <div className={`alerta ${alert.category}`}>{alert.msg}</div>): null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Login</h1>\n\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Your email\"\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Your password\"\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\"\n                        value=\"Login\" /> \n                    </div>\n                </form>\n\n                <div className=\"container-login\">\n                    <Link to={'/new-account'} className=\"enlace-cuenta\">\n                        Create an account\n                    </Link>\n\n                    <p\n                        className=\"enlace-cuenta\"\n                        onClick={handleDemo}\n                        >Demo account</p>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default Login;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertContext from '../../context/alerts/alertContext';\nimport AuthContext from '../../context/authentication/authContext';\n\n\nconst NewAccount = (props) => {\n\n    // Extract the values from context\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlert } = alertContext;\n\n    // Extract values for authentication\n    const authContext = useContext(AuthContext);\n    const { authenticate, messagge, registerUser, updateUser } = authContext;\n\n    \n    // State for login\n    const [ user, saveUser ] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirm: '',\n        isEmail: true,\n        completePassword: true,\n        matchPassword: true\n    });\n\n    // Extract user\n    const { name, email, password, confirm, isEmail, completePassword, matchPassword } = user;\n\n\n    // In case that a user has registered or there is a duplicate register\n    useEffect(() => {\n        if(authenticate) {\n            props.history.push('/projects');\n        }\n        if(messagge) {\n            showAlert(messagge.msg, messagge.category);\n        }\n\n        // Check if passwords are the same in real time\n        if( password.length === 0 ) {\n        } else if(confirm === password && password.length < 6) {\n            saveUser({\n                ...user,\n                matchPassword: true,\n                completePassword: false\n            });\n        } else if(confirm === password && password.length >= 6){\n            saveUser({\n                ...user,\n                matchPassword: true,\n                completePassword: true\n            });\n        } else if(confirm !== password && password.length < 6){\n            saveUser({\n                ...user,\n                matchPassword: false,\n                completePassword: false\n            });\n        } else {\n            saveUser({\n                ...user,\n                matchPassword: false,\n                completePassword: true\n            });\n        }\n\n        // eslint-disable-next-line\n    }, [authenticate, messagge, props.history, email, confirm, password]);\n\n    // Keep track of change of email\n    useEffect(() => {\n        // Check the position of the '@'\n        let position = 0;\n        for (let i = 0; i < email.length; i++) {\n            if (email.charAt(i) === '@') {\n                position = i;\n            }\n        }\n\n        // If there are character before and after '@' then is an email\n        if (email.length === 0) {\n        } else if (position === 0) {\n            saveUser({\n                ...user,\n                isEmail: false\n            })\n        } else if (position !== 0 && email.length !== position + 1) {\n            saveUser({\n                ...user,\n                isEmail: true\n            })\n        }\n        // eslint-disable-next-line\n    }, [email])\n\n\n    // To keep track of user input\n    const handleChange = e => {\n        saveUser({\n            ...user,\n            [e.target.name]: e.target.value,\n        });\n\n    };\n\n    // when user wants to login\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        // Validation of empty fields\n        if(name.trim() === '' || email.trim() === '' || password.trim() === '' || confirm.trim() === '') {\n            showAlert('All fields are mandatory', 'alerta-error');\n            return;\n        }\n\n        // Password must at least contains 6 characters\n        if(!completePassword && password.length < 6) {\n            showAlert('Password must be at least 6 characters', 'alerta-error');            \n            return;\n        }\n\n        // Password and confirm must be the same\n        if(!matchPassword) {            \n            showAlert('Password must be the same', 'alerta-error');\n            return;\n        }\n\n        // Check if user has created a demo account before\n        let demoEmail = localStorage.getItem('demo-account');\n\n        if (demoEmail) {\n            updateUser(demoEmail, user);\n            localStorage.removeItem('demo-account');\n        } else {\n            // Pass the value\n            registerUser({\n                name,\n                email, \n                password\n            })\n        }\n    }\n    \n\n    return ( \n        <div className=\"form-usuario\">\n            { alert ? ( <div className={`alerta ${alert.category}`}>{alert.msg}</div>): null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Create an account</h1>\n\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Your Name\"\n                            value={name}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Your email\"\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    {isEmail ? null : (<p className='auth-form-error'>Email is incorrect</p>)}\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Your password\"\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    {completePassword ? null : (<p className='auth-form-error'>Password must contain at least 6 characters</p>)}\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirm\">Confirm Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm\"\n                            name=\"confirm\"\n                            placeholder=\"Confirm Password\"\n                            value={confirm}\n                            onChange={handleChange}\n                        />\n                    </div>\n                        {matchPassword ? null : (<p className='auth-form-error'>Password must be the same</p>)}\n              \n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\"\n                        value=\"Register\" /> \n                    </div>\n                </form>\n\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Return to login\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default NewAccount;","import { createContext } from 'react';\n\nconst projectContext = createContext();\n\nexport default projectContext;","import React, { useState, useContext } from 'react';\nimport projectContext from '../../context/projects/projectContext';\n\nconst NewProject = () => {\n\n    // Get state of form\n    const projectsContext = useContext(projectContext);\n    const { form, errorform, showForm, addProject, showError } = projectsContext;\n\n    // State for the project\n    const [ project, saveProject ] = useState({\n        name: ''\n    });\n\n    const { name } = project\n    // Keep track of the form inputs\n    const onChangeProject = e => {\n        saveProject({\n            ...project,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    // When user wants to add a new project\n    const onSubmitProject = e => {\n        e.preventDefault();\n\n        // Validation\n        if (name.trim() === \"\") {\n            showError(true)\n            return;\n        }\n\n        showError(false)\n\n        // Update state\n        addProject(project);\n\n        // Reset form\n        saveProject({\n            name: ''\n        })\n\n    }\n\n    return ( \n        <>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={() => showForm()}\n            >Create a new project</button>\n\n            {\n                form\n                ? \n                    (\n                        <form\n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit={onSubmitProject}\n                        >\n                            <input\n                                type=\"text\"\n                                className=\"input-text\"\n                                placeholder=\"Name of the project\"\n                                name=\"name\"\n                                value={name}\n                                onChange={onChangeProject}\n                            />\n\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value=\"Add new Project\"\n                            />\n                \n                        </form>\n                    )\n                : null }\n            { errorform ? <p className=\"mensaje error\">The name of the project is mandatory</p> : null}\n        </>\n     );\n}\n \nexport default NewProject;","import { createContext } from 'react';\n\nconst taskContext = createContext();\n\nexport default taskContext;","import React, { useContext } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst SingleProjects = ( { project } ) => {\n\n    // Get state of project\n    const projectsContext = useContext(projectContext);\n    const {  actualProject } = projectsContext;\n    \n    // Get state of tasks\n    const tasksContext = useContext(taskContext);\n    const {  getTasks } = tasksContext;\n\n    // Show selected project and tasks\n    const selectProject = id => {\n        actualProject(id); // Get the project by project id\n        getTasks(id); // Get the tasks of the project by project id\n    }\n\n    return ( \n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={ () => selectProject(project._id) }\n            >{project.name}</button>\n        </li>\n     );\n}\n \nexport default SingleProjects;","import React, { useContext, useEffect } from 'react';\nimport SingleProject from './SingleProject';\nimport projectContext from '../../context/projects/projectContext';\nimport AlertContext from '../../context/alerts/alertContext';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst ListProjects = () => {\n\n    // Extract projects from initial state\n    const projectsContext = useContext(projectContext);\n    const { projects, messagge, getProjects } = projectsContext;\n\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlert } = alertContext;\n\n\n    // Get projects when component get's loaded\n    useEffect(() => {\n\n        if(messagge) {\n            showAlert(messagge.msg, messagge.category)\n        }\n\n        getProjects();\n    // eslint-disable-next-line\n    }, [messagge]);\n\n    // Check if there is anything inside projects\n    if( projects.length === 0 ) return <p>Start creating a new project!</p>;\n\n    return ( \n\n        <ul className=\"listado-proyectos\">\n            { alert ? (<div className={`alert {alert.category}`}>{alert.msg}</div>): null}\n            <TransitionGroup>\n            {projects.map( project => (\n                <CSSTransition\n                    key={project._id}\n                    timeout={200}\n                    className=\"proyecto\"\n                >\n                    <SingleProject \n                        project={project} \n                    />\n                </CSSTransition>\n            ))}\n            </TransitionGroup>\n        </ul>\n\n    );\n}\n \nexport default ListProjects;","import React from 'react';\nimport NewProject from '../projects/NewProject';\nimport ListProjects from '../projects/ListProjects';\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>Efficiency<span>Tracker</span></h1>\n\n            <NewProject />\n\n            <div className=\"proyectos\">\n                <h2>Your Projects</h2>\n\n                <ListProjects />\n                \n            </div>\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React, { useContext } from 'react';\nimport AuthContext from '../../context/authentication/authContext';\n\nconst Bar = () => {\n    \n    // Extract data from token\n    const authContext = useContext(AuthContext);\n\n    const { user, logOut } = authContext;\n\n    return ( \n        <header className=\"app-header\">\n            {user ? <p className=\"nombre-usuario\">Hello <span>{user.name}</span></p> : null}\n\n            <nav className=\"nav-principal\">\n                <button\n                    className=\"btn btn-blank cerrar-sesion\"\n                    onClick={logOut}\n                >Log out</button>\n\n            </nav>\n        </header>\n     );\n}\n \nexport default Bar;","import React, { useState, useContext, useEffect } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst FormTask = () => {\n\n    // Extract project from state\n    const projectsContext = useContext(projectContext);\n    const { project } = projectsContext;\n\n    // Get state of tasks of project\n    const tasksContext = useContext(taskContext);\n    const { errortask, selectedtask, addTask, validateTask, updateTask } = tasksContext;\n\n    // State of form input\n    const [ task, saveTask ] = useState({\n        name: ''\n    })\n\n    // Effect that detects if there is a selected task\n    useEffect( () => {\n        if(selectedtask) {\n            saveTask(selectedtask)\n        }\n        // eslint-disable-next-line\n    }, [ selectedtask ]);\n\n    // Get values from task\n    const { name } = task;\n\n    if(!project) return null;\n\n    // Read values of the form\n    const handleChange = e => {\n        saveTask({\n            ...task,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // Add a new task\n    const onSubmit = e => {\n\n        e.preventDefault();\n\n        // Validation\n        if(name.trim() === \"\") {\n            validateTask(true);\n            return;\n        }\n\n        validateTask(false);\n        \n        // Pass validation\n        task.projectId = project._id;\n\n        // Check if editing or adding\n        if(selectedtask) { // editing\n            updateTask(task);\n        }  else { // new task\n            addTask(task);\n        }\n\n        // Re-initialize form\n        saveTask({\n            name: ''\n        });\n\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Task name ...\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={selectedtask ? 'Edit Task' : 'Add Task'}\n                    />\n                </div>\n            </form>\n\n            {errortask ? <p className=\"mensaje error\">The task name is mandatory</p> : null}\n        </div>\n     );\n}\n \nexport default FormTask;","import React, { useContext } from 'react';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst Task = ( { task } ) => {\n\n    // Get state of tasks of project\n    const tasksContext = useContext(taskContext);\n    const { deleteTask, updateTask, saveActualTask } = tasksContext;\n\n\n    // Function that modifies the state of a task\n    const changeState = task => {\n        if(task.state) {\n            task.state = false;\n        } else {\n            task.state = true;\n        }\n        updateTask(task);\n    }\n\n\n    return ( \n        <li className=\"tarea sombre\">\n            <p>{task.name}</p>\n\n            <div className=\"estado\">\n                {task.state\n                ?\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                            onClick={() => changeState(task)}\n                        >Complete</button>\n                    )\n                :\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                            onClick={() => changeState(task)}\n                        >Incomplete</button>\n                    )\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => saveActualTask(task)}\n                >Edit</button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => deleteTask(task._id, task.projectId)}\n                >Delete</button>\n            </div>\n        </li>\n        \n     );\n}\n \nexport default Task;","import React, { useContext } from 'react';\nimport Task from './Task';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nconst ListTask = () => {\n\n    // Get state of projects\n    const projectsContext = useContext(projectContext);\n    const { project, deleteProject } = projectsContext;\n\n    // Get state of tasks of project\n    const tasksContext = useContext(taskContext);\n    const { projecttasks } = tasksContext;\n\n    if(!project) return <h2>Select a project</h2>;\n\n    return ( \n        <>\n            <h2>Project: {project.name}</h2>\n\n            <ul className=\"listado-tareas\">\n                {projecttasks.length === 0\n                    ? (<li className=\"tarea\"><p>There are no tasks</p></li>)\n                    : <TransitionGroup>\n                        {\n                            projecttasks.map( task => (\n                                <CSSTransition\n                                    key={task._id}\n                                    timeout={100}\n                                    className=\"tarea\"\n                                >\n                                    <Task \n                                        task={task}\n                                    />\n                                </CSSTransition>\n                            ))\n                        }     \n                    </TransitionGroup>\n                }\n\n            </ul>\n\n            <button\n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={() => deleteProject(project._id)}\n            >Delete Project &times;</button>\n        </>\n     );\n}\n \nexport default ListTask;","import React, { useContext, useEffect } from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Bar from '../layout/Bar';\nimport FormTask from '../tasks/FormTask';\nimport ListTask from '../tasks/ListTask';\nimport AuthContext from '../../context/authentication/authContext';\n\nconst Projects = () => {\n\n    // Extract data from token\n    const authContext = useContext(AuthContext);\n\n    const { authenticateUser } = authContext;\n\n    useEffect(() => {\n        authenticateUser();\n        // eslint-disable-next-line\n    }, []);\n\n    return ( \n        <div className=\"contenedor-app\">\n            <Sidebar />\n\n            <div className=\"seccion-principal\">\n\n                <Bar />\n\n                <main>\n                    <FormTask />\n\n                    <div className=\"contenedor-tareas\">\n                        <ListTask />\n                    </div>\n                </main>\n            </div>\n        </div>\n\n     );\n}\n \nexport default Projects;","export const FORM_PROJECT = 'FORM_PROJECT';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const VALIDATE_FORM = 'VALIDATE_FORM';\nexport const ACTUAL_PROJECT = 'ACTUAL_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\nexport const PROJECT_ERROR = 'PROJECT_ERROR';\n\nexport const TASK_PROJECT = 'TASK_PROJECT';\nexport const ADD_TASK = 'ADD_TASK';\nexport const VALIDATE_TASK = 'VALIDATE_TASK';\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const TASK_STATE = \"TASK_STATE\";\nexport const ACTUAL_TASK = \"ACTUAL_TASK\";\nexport const MODIFY_TASK = \"MODIFY_TASK\";\n\n\nexport const SHOW_ALERT = \"SHOW_ALERT\";\nexport const HIDE_ALERT = \"HIDE_ALERT\";\n\n\nexport const SUCCESSFUL_REGISTRATION = \"SUCCESSFUL_REGISTRATION\";\nexport const ERROR_REGISTRATION = \"ERROR_REGISTRATION\";\nexport const GET_USER = \"GET_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const SUCCESSFUL_LOGIN = \"SUCCESSFUL_LOGIN\";\nexport const ERROR_LOGIN = \"ERROR_LOGIN\";\nexport const LOG_OUT = \"LOG_OUT\";\n\n","import { FORM_PROJECT, GET_PROJECTS, ADD_PROJECT, VALIDATE_FORM, ACTUAL_PROJECT, DELETE_PROJECT, PROJECT_ERROR } from '../../types';\n\n// eslint-disable-next-line\nexport default (state, action) => {\n    switch(action.type) {\n        case FORM_PROJECT:\n            return {\n                ...state,\n                form: true\n            }\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            }\n        case ADD_PROJECT:\n            return {\n                ...state,\n                projects: [action.payload, ...state.projects],\n                form: false\n            }\n        case VALIDATE_FORM:\n            return {\n                ...state,\n                errorform: action.payload\n            }\n        case ACTUAL_PROJECT:\n            return {\n                ...state,\n                project: state.projects.filter(project => project._id === action.payload)[0]\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(project => project._id !==  action.payload),\n                project: null\n            }\n        case PROJECT_ERROR:\n            return {\n                ...state,\n                messagge: action.payload\n            }\n        default:\n            return state;\n    }\n}","import axios from 'axios';\n\nconst clientAxios = axios.create({\n    baseURL: process.env.NODE_ENV === 'production' ? process.env.REACT_APP_BACKEND_URL : 'http://localhost:4000'\n});\n\nexport default clientAxios;\n\n","import React, { useReducer } from 'react';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport { ADD_PROJECT, FORM_PROJECT, GET_PROJECTS, VALIDATE_FORM, ACTUAL_PROJECT, DELETE_PROJECT, PROJECT_ERROR } from '../../types';\nimport clientAxios from '../../config/axios'\n\nconst ProjectState = props => {\n\n    const initialState = {\n        projects : [],\n        form: false,\n        errorform: false,\n        project: null,\n        messagge: null\n    }\n\n    // Dispatch for run actions\n    const [ state, dispatch ] = useReducer(projectReducer, initialState);\n\n    // Show form for creating a new project\n    const showForm = () => {\n        dispatch({\n            type: FORM_PROJECT\n        })\n    }\n\n    // Get Projects\n    const getProjects = async () => {\n        try {\n            const response = await clientAxios.get('/api/projects');\n\n            dispatch({\n                type: GET_PROJECTS,\n                payload: response.data.projects\n            })\n\n        } catch (error) {\n            console.log(error.response)\n            const alert = {\n                msg: 'There was an error',\n                category: 'alerta-error'\n            }\n\n            dispatch({\n                type: PROJECT_ERROR,\n                payload: alert\n            })\n        }\n    }\n\n    // Add new project\n    const addProject = async project => {\n\n        try {\n            const response = await clientAxios.post('/api/projects', project);\n            console.log(response);\n\n            dispatch({\n                type: ADD_PROJECT,\n                payload: response.data\n            })\n\n        } catch (error) {\n            console.log(error.response)\n            const alert = {\n                msg: 'There was an error',\n                category: 'alerta-error'\n            }\n\n            dispatch({\n                type: PROJECT_ERROR,\n                payload: alert\n            })\n        }\n    }\n\n    // Validate form for errors\n    const showError = state => {\n        dispatch({\n            type: VALIDATE_FORM,\n            payload: state\n        })\n    }\n\n    // Select a project\n    const actualProject = projectId => {\n        dispatch({\n            type: ACTUAL_PROJECT,\n            payload: projectId\n        })\n    }\n\n    // Delete a project\n    const deleteProject = async projectId => {\n        try {\n            await clientAxios.delete(`/api/projects/${projectId}`);\n\n            dispatch({\n                type: DELETE_PROJECT,\n                payload: projectId\n            })\n\n        } catch (error) {\n            console.log(error.response)\n            const alert = {\n                msg: 'There was an error',\n                category: 'alerta-error'\n            }\n\n            dispatch({\n                type: PROJECT_ERROR,\n                payload: alert\n            })\n        }\n    }\n\n    return (\n        <projectContext.Provider\n        value={{\n            projects: state.projects,\n            form: state.form,\n            errorform: state.errorform,\n            project: state.project,\n            messagge: state.messagge,\n            showForm,\n            getProjects,\n            addProject,\n            showError,\n            actualProject,\n            deleteProject\n        }}>\n            {props.children}\n        </projectContext.Provider>\n    )\n\n}\n\nexport default ProjectState;","import { TASK_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK, ACTUAL_TASK, MODIFY_TASK } from '../../types';\n\n// eslint-disable-next-line\nexport default ( state, action ) => {\n    switch(action.type) {\n        case TASK_PROJECT:\n            return {\n                ...state,\n                projecttasks : action.payload\n            }\n        case ADD_TASK:\n            return {\n                ...state,\n                projecttasks : [action.payload, ...state.projecttasks]\n            }\n        case VALIDATE_TASK:\n            return {\n                ...state,\n                errortask: action.payload \n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                projecttasks : state.projecttasks.filter(task => task._id !== action.payload)\n            }\n        case MODIFY_TASK:\n            return {\n                ...state,\n                projecttasks: state.projecttasks.map(task => task._id === action.payload._id ? action.payload : task),\n                selectedtask: null\n            }\n        case ACTUAL_TASK:\n            return {\n                ...state,\n                selectedtask: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport taskContext from './taskContext';\nimport TaskReducer from './TaskReducer';\nimport { TASK_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK, ACTUAL_TASK, MODIFY_TASK } from '../../types';\nimport clientAxios from '../../config/axios';\n\nconst TaskState = props => {\n    \n    const initialState = {\n        projecttasks : [],\n        errortask: false,\n        selectedtask: null\n    }\n\n    // Create dispatch and state\n    const [ state, dispatch ] = useReducer(TaskReducer, initialState);\n\n    // Get tasks from a project\n    const getTasks = async projectId => {\n        try {\n            const response = await clientAxios.get('/api/tasks', { params: { projectId } });\n\n            dispatch({\n                type: TASK_PROJECT,\n                payload: response.data.tasks\n            })\n\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    // Add a new task\n    const addTask = async task => {\n\n        try {\n            \n            const response = await clientAxios.post('./api/tasks', task);\n\n            dispatch({\n                type: ADD_TASK,\n                payload: response.data\n            })\n\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    // Validate and shows an error\n    const validateTask = state => {\n        dispatch({\n            type: VALIDATE_TASK,\n            payload: state\n        })\n    }\n\n    // Delete a task\n    const deleteTask = async (taskId, projectId) => {\n        try {\n            \n            await clientAxios.delete(`/api/tasks/${taskId}`, { params: { projectId } });\n            \n            dispatch({\n                type: DELETE_TASK,\n                payload: taskId\n            })\n\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    // Change state of task\n    const updateTask = async task => {\n        try {\n            const response = await clientAxios.put(`/api/tasks/${task._id}`, task );\n\n            dispatch({\n                type: MODIFY_TASK,\n                payload: response.data.task\n            })\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    // Extract task for edit\n    const saveActualTask = task => {\n        dispatch({\n            type: ACTUAL_TASK,\n            payload: task\n        })\n    }\n\n    return (\n        <taskContext.Provider\n            value={{\n                projecttasks: state.projecttasks,\n                errortask: state.errortask,\n                selectedtask: state.selectedtask,\n                getTasks,\n                addTask,\n                validateTask,\n                deleteTask,\n                updateTask,\n                saveActualTask\n            }}\n        >\n            {props.children}\n        </taskContext.Provider>    \n    )\n}\n\nexport default TaskState;","import { SHOW_ALERT, HIDE_ALERT } from '../../types';\n\n// eslint-disable-next-line\nexport default (state, action) => {\n    switch(action.type) {\n        case SHOW_ALERT:\n            return {\n                alert: action.payload\n            }\n        case HIDE_ALERT:\n            return {\n                alert: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport alertContext from './alertContext';\nimport alertReducer from './alertReducer';\n\nimport { SHOW_ALERT, HIDE_ALERT } from '../../types';\n\nconst AlertState = props => {\n    \n    const initialState = {\n        alert: null\n    }\n\n    const [ state, dispatch ] = useReducer(alertReducer, initialState);\n\n    // Functions\n    const showAlert = (msg, category) => {\n        dispatch({\n            type: SHOW_ALERT,\n            payload: {\n                msg,\n                category\n            }\n        });\n\n        // After 5sec, remove alert\n        setTimeout( () => {\n            dispatch({\n                type: HIDE_ALERT\n            })\n        }, 5000);\n\n    }\n    \n    return (\n        <alertContext.Provider\n            value={{\n                alert: state.alert,\n                showAlert\n            }}\n        >\n            {props.children}\n        </alertContext.Provider>\n    )\n}\n\nexport default AlertState;","import { SUCCESSFUL_REGISTRATION, ERROR_REGISTRATION, GET_USER, SUCCESSFUL_LOGIN, ERROR_LOGIN, LOG_OUT, UPDATE_USER } from '../../types';\n\n// eslint-disable-next-line\nexport default (state, action) => {\n    switch(action.type) {\n        case SUCCESSFUL_LOGIN:\n        case SUCCESSFUL_REGISTRATION:\n            \n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                authenticate: true,\n                messagge: null,\n                loading: false\n            }\n            \n        case GET_USER:\n            return {\n                ...state,\n                authenticate: true,\n                user: action.payload,\n                loading: false\n            }\n        case LOG_OUT:\n        case ERROR_REGISTRATION:\n        case ERROR_LOGIN:\n            localStorage.removeItem('token');\n\n            return {\n                ...state,\n                token: null,\n                user: null,\n                authenticate: null,\n                messagge: action.payload,\n                loading: false\n            }\n        case UPDATE_USER:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                authenticate:true,\n                messagge: null,\n                loading: false,\n            }\n        default:\n            return state;\n    }\n}","import clientAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token) {\n        clientAxios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete clientAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport { SUCCESSFUL_REGISTRATION, ERROR_REGISTRATION, GET_USER, SUCCESSFUL_LOGIN, ERROR_LOGIN, LOG_OUT, UPDATE_USER } from '../../types';\n\nimport clientAxios from '../../config/axios';\nimport tokenAuth from '../../config/tokenAuth'\n\nconst AuthState = props => {\n\n    const initialState = {\n        token: localStorage.getItem('token'),\n        authenticate: null,\n        user: null,\n        messagge: null,\n        loading: true\n    }\n\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\n\n    // Functions\n\n    // Register a new user\n    const registerUser = async data => {\n        try {\n            const response = await clientAxios.post('/api/users', data);\n\n            dispatch({\n                type: SUCCESSFUL_REGISTRATION,\n                payload: response.data\n            });\n\n            // Get user\n            authenticateUser();\n\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n\n            dispatch({\n                type: ERROR_REGISTRATION,\n                payload: alert\n            });\n        }\n    }\n\n    // Return the authenticated user\n    const authenticateUser = async() => {\n        const token = localStorage.getItem('token');\n        if(token) {\n            tokenAuth(token)\n        }\n\n        try {\n            const response = await clientAxios.get('/api/auth');\n            \n            dispatch({\n                type: GET_USER,\n                payload: response.data.user\n            })\n        } catch (error) {\n            dispatch({\n                type: ERROR_LOGIN\n            })\n        }\n    }\n\n    // When the user logs in\n    const logIn = async data => {\n        try {\n            const response = await clientAxios.post('/api/auth', data);\n\n            dispatch({\n                type: SUCCESSFUL_LOGIN,\n                payload: response.data\n            });\n\n            // Get user\n            authenticateUser();\n\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            // In case the password does not contains 6 characters\n            if(!error.response.data.msg) {\n                alert.msg = error.response.data.errors[0].msg\n            }\n            \n            dispatch({\n                type: ERROR_LOGIN,\n                payload: alert\n            });\n        }\n    }\n\n    // Log out\n    const logOut = () => {\n        dispatch({\n            type: LOG_OUT\n        })\n    }\n\n    // Change state of user\n    const updateUser = async (email, user) => {\n        try {\n            const response = await clientAxios.put(`/api/users/${email}`, user );\n \n            dispatch({\n                type: UPDATE_USER,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                authenticate: state.authenticate,\n                user: state.user,\n                messagge: state.messagge,\n                loading: state.loading,\n                registerUser,\n                authenticateUser,\n                updateUser,\n                logIn,\n                logOut\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AutchContext from '../../context/authentication/authContext';\n\nconst PrivateRoute = ({ component: Component, ...props }) => {\n    \n    const authContext = useContext(AutchContext);\n    const { authenticate, loading, authenticateUser } = authContext;\n\n    useEffect(() => {\n        authenticateUser()\n        // eslint-disable-next-line\n    }, []);\n\n    return (  \n        <Route {...props } render={props => !authenticate && !loading ? (\n            <Redirect to=\"/\" />\n        ) : (\n            <Component {...props} />\n        ) }\n        />\n    );\n}\n \nexport default PrivateRoute;","import { BrowserRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NewAccount from './components/auth/NewAccount';\nimport Projects from './components/projects/Projects';\n\nimport ProjectState from './context/projects/ProjectState';\nimport TaskState from './context/tasks/TaskState';\nimport AlertState from './context/alerts/alertState';\nimport AuthState from './context/authentication/authState';\nimport tokenAuth from './config/tokenAuth';\nimport PrivateRoute from './components/routes/PrivateRoute';\n\n// Check if we have a token\nconst token = localStorage.getItem('token');\nif(token) {\n  tokenAuth(token);\n}\n\nfunction App() {\n\n  return (\n    <ProjectState>\n      <TaskState>\n        <AlertState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <HashRouter basename='/'>\n                  <Route exact path=\"/\" component={Login} />\n                  <Route exact path=\"/new-account\" component={NewAccount} />\n                  <PrivateRoute exact path=\"/projects\" component={Projects} />\n                </HashRouter>\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertState>\n      </TaskState>\n    </ProjectState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}