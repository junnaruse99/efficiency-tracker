{"version":3,"sources":["components/auth/Login.js","components/auth/NewAccount.js","context/projects/projectContext.js","components/projects/NewProject.js","context/tasks/taskContext.js","components/projects/SingleProject.js","components/projects/ListProjects.js","components/layout/Sidebar.js","components/layout/Bar.js","components/tasks/FormTask.js","components/tasks/Task.js","components/tasks/ListTask.js","components/projects/Projects.js","types/index.js","context/projects/projectReducer.js","context/projects/ProjectState.js","context/tasks/TaskReducer.js","context/tasks/TaskState.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","email","password","user","saveUser","handleChange","e","target","name","value","className","onSubmit","preventDefault","htmlFor","type","id","placeholder","onChange","to","NewAccount","confirm","projectContext","createContext","NewProject","projectsContext","useContext","form","errorform","showForm","addProject","showError","project","saveProject","onClick","trim","taskContext","SingleProjects","actualProject","getTasks","ListProjects","projects","getProjects","useEffect","length","TransitionGroup","map","CSSTransition","timeout","SingleProject","Sidebar","Bar","href","FormTask","tasksContext","errortask","selectedtask","addTask","validateTask","modifyTask","task","saveTask","projectID","state","Task","deleteTask","changeTaskState","saveActualTask","changeState","ListTask","deleteProject","projecttasks","Projects","FORM_PROJECT","GET_PROJECTS","ADD_PROJECT","VALIDATE_FORM","ACTUAL_PROJECT","DELETE_PROJECT","TASK_PROJECT","ADD_TASK","VALIDATE_TASK","DELETE_TASK","TASK_STATE","ACTUAL_TASK","MODIFY_TASK","action","payload","filter","ProjectState","props","useReducer","projectReducer","dispatch","Provider","uuid","projectId","children","tasks","TaskState","TaskReducer","taskId","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e78b216.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Login = () => {\n\n    // State for login\n    const [ user, saveUser ] = useState({\n        email: '',\n        password: '',\n    });\n\n    // Extract user\n    const { email, password } = user;\n\n    // To keep track of user input\n    const handleChange = e => {\n        saveUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    // when user wants to login\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        // Validation of empty fields\n\n        // Pass the value\n\n    }\n    \n\n    return ( \n        <div className=\"form-usuario\">\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Login</h1>\n\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Your email\"\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Your password\"\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\"\n                        value=\"Login\" /> \n                    </div>\n                </form>\n\n                <Link to={'/new-account'} className=\"enlace-cuenta\">\n                    Create an account\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst NewAccount = () => {\n\n    // State for login\n    const [ user, saveUser ] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirm: ''\n    });\n\n    // Extract user\n    const { name, email, password, confirm } = user;\n\n    // To keep track of user input\n    const handleChange = e => {\n        saveUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    // when user wants to login\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        // Validation of empty fields\n\n        // Validation of password with a minimum of 6 chars\n\n        // Check if both passwords are the same\n\n        // Pass the value\n\n    }\n    \n\n    return ( \n        <div className=\"form-usuario\">\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Create an account</h1>\n\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Your Name\"\n                            value={name}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Your email\"\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Your password\"\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirm\">Confirm Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm\"\n                            name=\"confirm\"\n                            placeholder=\"Confirm Password\"\n                            value={confirm}\n                            onChange={handleChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\"\n                        value=\"Register\" /> \n                    </div>\n                </form>\n\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Return to login\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default NewAccount;","import { createContext } from 'react';\n\nconst projectContext = createContext();\n\nexport default projectContext;","import React, { useState, useContext } from 'react';\nimport projectContext from '../../context/projects/projectContext';\n\nconst NewProject = () => {\n\n    // Get state of form\n    const projectsContext = useContext(projectContext);\n    const { form, errorform, showForm, addProject, showError } = projectsContext;\n\n    // State for the project\n    const [ project, saveProject ] = useState({\n        name: ''\n    });\n\n    const { name } = project\n    // Keep track of the form inputs\n    const onChangeProject = e => {\n        saveProject({\n            ...project,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    // When user wants to add a new project\n    const onSubmitProject = e => {\n        e.preventDefault();\n\n        // Validation\n        if (name.trim() === \"\") {\n            showError(true)\n            return;\n        }\n\n        showError(false)\n\n        // Update state\n        addProject(project);\n\n        // Reset form\n        saveProject({\n            name: ''\n        })\n\n    }\n\n    return ( \n        <>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={() => showForm()}\n            >Create a new project</button>\n\n            {\n                form\n                ? \n                    (\n                        <form\n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit={onSubmitProject}\n                        >\n                            <input\n                                type=\"text\"\n                                className=\"input-text\"\n                                placeholder=\"Name of the project\"\n                                name=\"name\"\n                                value={name}\n                                onChange={onChangeProject}\n                            />\n\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value=\"Add new Project\"\n                            />\n                \n                        </form>\n                    )\n                : null }\n            { errorform ? <p className=\"mensaje error\">The name of the project is mandatory</p> : null}\n        </>\n     );\n}\n \nexport default NewProject;","import { createContext } from 'react';\n\nconst taskContext = createContext();\n\nexport default taskContext;","import React, { useContext } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst SingleProjects = ( { project } ) => {\n\n    // Get state of project\n    const projectsContext = useContext(projectContext);\n    const {  actualProject } = projectsContext;\n    \n    // Get state of tasks\n    const tasksContext = useContext(taskContext);\n    const {  getTasks } = tasksContext;\n\n    // Show selected project and tasks\n    const selectProject = id => {\n        actualProject(id); // Get the project by project id\n        getTasks(id); // Get the tasks of the project by project id\n    }\n\n    return ( \n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={ () => selectProject(project.id) }\n            >{project.name}</button>\n        </li>\n     );\n}\n \nexport default SingleProjects;","import React, { useContext, useEffect } from 'react';\nimport SingleProject from './SingleProject';\nimport projectContext from '../../context/projects/projectContext';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst ListProjects = () => {\n\n    // Extract projects from initial state\n    const projectsContext = useContext(projectContext);\n    const { projects, getProjects } = projectsContext;\n\n    // Get projects when component get's loaded\n    useEffect(() => {\n        getProjects();\n    }, []);\n\n    // Check if there is anything inside projects\n    if( projects.length === 0 ) return <p>Start creating a new project!</p>;\n\n    return ( \n\n        <ul className=\"listado-proyectos\">\n            <TransitionGroup>\n            {projects.map( project => (\n                <CSSTransition\n                    key={project.id}\n                    timeout={200}\n                    className=\"proyecto\"\n                >\n                    <SingleProject \n                        project={project} \n                    />\n                </CSSTransition>\n            ))}\n            </TransitionGroup>\n        </ul>\n\n    );\n}\n \nexport default ListProjects;","import React from 'react';\nimport NewProject from '../projects/NewProject';\nimport ListProjects from '../projects/ListProjects';\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>MERN<span>Tasks</span></h1>\n\n            <NewProject />\n\n            <div className=\"proyectos\">\n                <h2>Your Projects</h2>\n\n                <ListProjects />\n                \n            </div>\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React from 'react';\n\nconst Bar = () => {\n    return ( \n        <header className=\"app-header\">\n            <p className=\"nombre-usuario\">Hello <span>Jun Naruse</span></p>\n\n            <nav className=\"nav-principal\">\n                <a href=\"#!\">Log out</a>\n\n            </nav>\n        </header>\n     );\n}\n \nexport default Bar;","import React, { useState, useContext, useEffect } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst FormTask = () => {\n\n    // Extract project from state\n    const projectsContext = useContext(projectContext);\n    const { project } = projectsContext;\n\n    // Get state of tasks of project\n    const tasksContext = useContext(taskContext);\n    const { errortask, selectedtask, addTask, validateTask, modifyTask } = tasksContext;\n\n    // State of form input\n    const [ task, saveTask ] = useState({\n        name: ''\n    })\n\n    // Effect that detects if there is a selected task\n    useEffect( () => {\n        if(selectedtask) {\n            saveTask(selectedtask)\n        }\n    }, [ selectedtask ]);\n\n    // Get values from task\n    const { name } = task;\n\n    if(!project) return null;\n\n    // Read values of the form\n    const handleChange = e => {\n        saveTask({\n            ...task,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // Add a new task\n    const onSubmit = e => {\n\n        e.preventDefault();\n\n        // Validation\n        if(name.trim() === \"\") {\n            validateTask(true);\n            return;\n        }\n\n        validateTask(false);\n        \n        // Pass validation\n        task.projectID = project.id;\n        task.state = false;\n\n        // Check if editing or adding\n        if(selectedtask) { // editing\n            modifyTask(task);\n        }  else { // new task\n            addTask(task);\n        }\n\n        // Re-initialize form\n        saveTask({\n            name: ''\n        });\n\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Task name ...\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={selectedtask ? 'Edit Task' : 'Add Task'}\n                    />\n                </div>\n            </form>\n\n            {errortask ? <p className=\"mensaje error\">The task name is mandatory</p> : null}\n        </div>\n     );\n}\n \nexport default FormTask;","import React, { useContext } from 'react';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst Task = ( { task } ) => {\n\n    // Get state of tasks of project\n    const tasksContext = useContext(taskContext);\n    const { deleteTask, changeTaskState, saveActualTask } = tasksContext;\n\n\n    // Function that modifies the state of a task\n    const changeState = task => {\n        if(task.state) {\n            task.state = false;\n        } else {\n            task.state = true;\n        }\n        changeTaskState(task);\n    }\n\n\n    return ( \n        <li className=\"tarea sombre\">\n            <p>{task.name}</p>\n\n            <div className=\"estado\">\n                {task.state\n                ?\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                            onClick={() => changeState(task)}\n                        >Complete</button>\n                    )\n                :\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                            onClick={() => changeState(task)}\n                        >Incomplete</button>\n                    )\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => saveActualTask(task)}\n                >Edit</button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => deleteTask(task.id)}\n                >Delete</button>\n            </div>\n        </li>\n        \n     );\n}\n \nexport default Task;","import React, { useContext } from 'react';\nimport Task from './Task';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nconst ListTask = () => {\n\n    // Get state of projects\n    const projectsContext = useContext(projectContext);\n    const { project, deleteProject } = projectsContext;\n\n    // Get state of tasks of project\n    const tasksContext = useContext(taskContext);\n    const { projecttasks } = tasksContext;\n\n    if(!project) return <h2>Select a project</h2>;\n\n    return ( \n        <>\n            <h2>Project: {project.name}</h2>\n\n            <ul className=\"listado-tareas\">\n                {projecttasks.length === 0\n                    ? (<li className=\"tarea\"><p>There are no tasks</p></li>)\n                    : <TransitionGroup>\n                        {\n                            projecttasks.map( task => (\n                                <CSSTransition\n                                    key={task.id}\n                                    timeout={100}\n                                    className=\"tarea\"\n                                >\n                                    <Task \n                                        task={task}\n                                    />\n                                </CSSTransition>\n                            ))\n                        }     \n                    </TransitionGroup>\n                }\n\n            </ul>\n\n            <button\n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={() => deleteProject(project.id)}\n            >Delete Project &times;</button>\n        </>\n     );\n}\n \nexport default ListTask;","import React from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Bar from '../layout/Bar';\nimport FormTask from '../tasks/FormTask';\nimport ListTask from '../tasks/ListTask';\n\nconst Projects = () => {\n    return ( \n        <div className=\"contenedor-app\">\n            <Sidebar />\n\n            <div className=\"seccion-principal\">\n\n                <Bar />\n\n                <main>\n                    <FormTask />\n\n                    <div className=\"contenedor-tareas\">\n                        <ListTask />\n                    </div>\n                </main>\n            </div>\n        </div>\n\n     );\n}\n \nexport default Projects;","export const FORM_PROJECT = 'FORM_PROJECT';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const VALIDATE_FORM = 'VALIDATE_FORM';\nexport const ACTUAL_PROJECT = 'ACTUAL_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\n\n\nexport const TASK_PROJECT = 'TASK_PROJECT';\nexport const ADD_TASK = 'ADD_TASK';\nexport const VALIDATE_TASK = 'VALIDATE_TASK';\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const TASK_STATE = \"TASK_STATE\";\nexport const ACTUAL_TASK = \"ACTUAL_TASK\";\nexport const MODIFY_TASK = \"MODIFY_TASK\";","import { FORM_PROJECT, GET_PROJECTS, ADD_PROJECT, VALIDATE_FORM, ACTUAL_PROJECT, DELETE_PROJECT } from '../../types';\n\n\nexport default (state, action) => {\n    switch(action.type) {\n        case FORM_PROJECT:\n            return {\n                ...state,\n                form: true\n            }\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            }\n        case ADD_PROJECT:\n            return {\n                ...state,\n                projects: [action.payload, ...state.projects],\n                form: false\n            }\n        case VALIDATE_FORM:\n            return {\n                ...state,\n                errorform: action.payload\n            }\n        case ACTUAL_PROJECT:\n            return {\n                ...state,\n                project: state.projects.filter(project => project.id === action.payload)[0]\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(project => project.id !==  action.payload),\n                project: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport uuid from 'uuid/dist/v4';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport { ADD_PROJECT, FORM_PROJECT, GET_PROJECTS, VALIDATE_FORM, ACTUAL_PROJECT, DELETE_PROJECT } from '../../types';\n\n\nconst ProjectState = props => {\n\n    const projects = [\n        { id: 1, name: 'Virtual shop' },\n        { id: 2, name: 'Intranet' },\n        { id: 3, name: 'Web Desing' }\n    ]\n\n    const initialState = {\n        projects : [],\n        form: false,\n        errorform: false,\n        project: null\n    }\n\n    // Dispatch for run actions\n    const [ state, dispatch ] = useReducer(projectReducer, initialState);\n\n    // Show form for creating a new project\n    const showForm = () => {\n        dispatch({\n            type: FORM_PROJECT\n        })\n    }\n\n    // Get Projects\n    const getProjects = () => {\n        dispatch({\n            type: GET_PROJECTS,\n            payload: projects\n        })\n    }\n\n    // Add new project\n    const addProject = project => {\n        project.id = uuid();\n\n        // Add project to state\n        dispatch({\n            type: ADD_PROJECT,\n            payload: project\n        })\n    }\n\n    // Validate form for errors\n    const showError = state => {\n        dispatch({\n            type: VALIDATE_FORM,\n            payload: state\n        })\n    }\n\n    // Select a project\n    const actualProject = projectId => {\n        dispatch({\n            type: ACTUAL_PROJECT,\n            payload: projectId\n        })\n    }\n\n    // Delete a project\n    const deleteProject = projectId => {\n        dispatch({\n            type: DELETE_PROJECT,\n            payload: projectId\n        })\n    }\n\n    return (\n        <projectContext.Provider\n        value={{\n            projects: state.projects,\n            form: state.form,\n            errorform: state.errorform,\n            project: state.project,\n            showForm,\n            getProjects,\n            addProject,\n            showError,\n            actualProject,\n            deleteProject\n        }}>\n            {props.children}\n        </projectContext.Provider>\n    )\n\n}\n\nexport default ProjectState;","import { TASK_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK, TASK_STATE, ACTUAL_TASK, MODIFY_TASK } from '../../types';\n\nexport default ( state, action ) => {\n    switch(action.type) {\n        case TASK_PROJECT:\n            return {\n                ...state,\n                projecttasks : state.tasks.filter(task => task.projectId === action.payload)\n            }\n        case ADD_TASK:\n            return {\n                ...state,\n                tasks: [action.payload, ...state.tasks],\n                projecttasks : [action.payload, ...state.projecttasks]\n            }\n        case VALIDATE_TASK:\n            return {\n                ...state,\n                errortask: action.payload \n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                tasks : state.tasks.filter(task => task.id !== action.payload),\n                projecttasks : state.projecttasks.filter(task => task.id !== action.payload)\n            }\n        case TASK_STATE:\n        case MODIFY_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map(task => task.id === action.payload.id ? action.payload : task),\n                projecttasks: state.projecttasks.map(task => task.id === action.payload.id ? action.payload : task),\n                selectedtask: null\n            }\n        case ACTUAL_TASK:\n            return {\n                ...state,\n                selectedtask: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport uuid from 'uuid/dist/v4';\nimport taskContext from './taskContext';\nimport TaskReducer from './TaskReducer';\nimport { TASK_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK, TASK_STATE, ACTUAL_TASK, MODIFY_TASK } from '../../types';\n\nconst TaskState = props => {\n    \n    const initialState = {\n        tasks: [\n            {name: 'Choose platform', state: true, projectId: 1, id: 1},\n            {name: 'Choose colors', state: false, projectId: 2, id: 2},\n            {name: 'Choose pay method', state: true, projectId: 3, id: 3},\n            {name: 'Choose hosting', state: false, projectId: 2, id: 4},\n            {name: 'Choose platform', state: true, projectId: 1, id: 5},\n            {name: 'Choose colors', state: false, projectId: 1, id: 6},\n            {name: 'Choose pay method', state: true, projectId: 2, id: 7},\n            {name: 'Choose platform', state: true, projectId: 3, id: 8},\n            {name: 'Choose colors', state: false, projectId: 2, id: 9},\n            {name: 'Choose pay method', state: true, projectId: 1, id: 10}\n        ],\n        projecttasks : null,\n        errortask: false,\n        selectedtask: null\n    }\n\n    // Create dispatch and state\n    const [ state, dispatch ] = useReducer(TaskReducer, initialState);\n\n    // Get tasks from a project\n    const getTasks = projectId => {\n        dispatch({\n            type: TASK_PROJECT,\n            payload: projectId\n        })\n    }\n\n    // Add a new task\n    const addTask = task => {\n        task.id = uuid();\n\n        dispatch({\n            type: ADD_TASK,\n            payload: task\n        })\n    }\n\n    // Validate and shows an error\n    const validateTask = state => {\n        dispatch({\n            type: VALIDATE_TASK,\n            payload: state\n        })\n    }\n\n    // Delete a task\n    const deleteTask = taskId => {\n        dispatch({\n            type: DELETE_TASK,\n            payload: taskId\n        })\n    }\n\n    // Change state of task\n    const changeTaskState = task => {\n        dispatch({\n            type: TASK_STATE,\n            payload: task\n        })\n    }\n\n    // Extract task for edit\n    const saveActualTask = task => {\n        dispatch({\n            type: ACTUAL_TASK,\n            payload: task\n        })\n    }\n\n    // Modify a task\n    const modifyTask = task => {\n        dispatch({\n            type: MODIFY_TASK,\n            payload: task\n        })\n    }\n\n    return (\n        <taskContext.Provider\n            value={{\n                tasks: state.tasks,\n                projecttasks: state.projecttasks,\n                errortask: state.errortask,\n                selectedtask: state.selectedtask,\n                getTasks,\n                addTask,\n                validateTask,\n                deleteTask,\n                changeTaskState,\n                saveActualTask, \n                modifyTask\n            }}\n        >\n            {props.children}\n        </taskContext.Provider>    \n    )\n}\n\nexport default TaskState;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NewAccount from './components/auth/NewAccount';\nimport Projects from './components/projects/Projects';\nimport ProjectState from './context/projects/ProjectState';\nimport TaskState from './context/tasks/TaskState';\n\nfunction App() {\n  return (\n    <ProjectState>\n      <TaskState>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/new-account\" component={NewAccount} />\n            <Route exact path=\"/projects\" component={Projects} />\n          </Switch>\n        </Router>\n      </TaskState>\n    </ProjectState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}