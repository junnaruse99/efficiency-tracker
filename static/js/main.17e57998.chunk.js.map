{"version":3,"sources":["context/alerts/alertContext.js","context/authentication/authContext.js","components/auth/Login.js","components/auth/NewAccount.js","context/projects/projectContext.js","components/projects/NewProject.js","context/tasks/taskContext.js","components/projects/SingleProject.js","components/projects/ListProjects.js","components/layout/Sidebar.js","components/layout/Bar.js","components/tasks/FormTask.js","components/tasks/Task.js","components/tasks/ListTask.js","components/projects/Projects.js","types/index.js","context/projects/projectReducer.js","config/axios.js","context/projects/ProjectState.js","context/tasks/TaskReducer.js","context/tasks/TaskState.js","context/alerts/alertReducer.js","context/alerts/alertState.js","context/authentication/authReducer.js","config/tokenAuth.js","context/authentication/authState.js","components/routes/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["alertContext","createContext","authContext","Login","props","useContext","AlertContext","alert","showAlert","AuthContext","authenticate","messagge","logIn","useEffect","history","push","msg","category","useState","email","password","user","saveUser","handleChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","onChange","to","NewAccount","registerUser","console","log","confirm","length","projectContext","NewProject","projectsContext","form","errorform","showForm","addProject","showError","project","saveProject","onClick","taskContext","SingleProjects","actualProject","getTasks","_id","ListProjects","projects","getProjects","TransitionGroup","map","CSSTransition","timeout","SingleProject","Sidebar","Bar","logOut","FormTask","tasksContext","errortask","selectedtask","addTask","validateTask","updateTask","task","saveTask","projectId","Task","deleteTask","saveActualTask","changeState","state","ListTask","deleteProject","projecttasks","Projects","authenticateUser","FORM_PROJECT","GET_PROJECTS","ADD_PROJECT","VALIDATE_FORM","ACTUAL_PROJECT","DELETE_PROJECT","PROJECT_ERROR","TASK_PROJECT","ADD_TASK","VALIDATE_TASK","DELETE_TASK","ACTUAL_TASK","MODIFY_TASK","SHOW_ALERT","HIDE_ALERT","SUCCESSFUL_REGISTRATION","ERROR_REGISTRATION","GET_USER","SUCCESSFUL_LOGIN","ERROR_LOGIN","LOG_OUT","action","payload","filter","clientAxios","axios","create","baseURL","process","REACT_APP_BACKEND_URL","ProjectState","useReducer","projectReducer","dispatch","a","get","response","data","post","delete","Provider","children","TaskState","TaskReducer","params","tasks","taskId","put","AlertState","alertReducer","setTimeout","localStorage","setItem","token","loading","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","errors","PrivateRoute","Component","component","AutchContext","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17e57998.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;","import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertContext from '../../context/alerts/alertContext';\nimport AuthContext from '../../context/authentication/authContext';\n\n\nconst Login = (props) => {\n\n    // Extract the values from context\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlert } = alertContext;\n\n    // Extract values for authentication\n    const authContext = useContext(AuthContext);\n    const { authenticate, messagge, logIn } = authContext;\n\n    // Keep track of changes in messagge\n    useEffect(() => {\n        if(authenticate) {\n            props.history.push('/projects');\n        }\n        if(messagge) {\n            showAlert(messagge.msg, messagge.category);\n        }\n        // eslint-disable-next-line\n    }, [authenticate, messagge, props.history]);\n\n    // State for login\n    const [ user, saveUser ] = useState({\n        email: '',\n        password: '',\n    });\n\n    // Extract user\n    const { email, password } = user;\n\n    // To keep track of user input\n    const handleChange = e => {\n        saveUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    // when user wants to login\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        // Validation of empty fields\n        if(email.trim() === '' || password.trim() === '') {\n            showAlert('All fields are mandatory', 'alerta-error');\n        }\n        // Pass the value\n        logIn({ email, password });\n    }\n    \n\n    return ( \n        <div className=\"form-usuario\">\n            { alert ? ( <div className={`alerta ${alert.category}`}>{alert.msg}</div>): null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Login</h1>\n\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Your email\"\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Your password\"\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\"\n                        value=\"Login\" /> \n                    </div>\n                </form>\n\n                <Link to={'/new-account'} className=\"enlace-cuenta\">\n                    Create an account\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default Login;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertContext from '../../context/alerts/alertContext';\nimport AuthContext from '../../context/authentication/authContext';\n\n\nconst NewAccount = (props) => {\n\n    // Extract the values from context\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlert } = alertContext;\n\n    // Extract values for authentication\n    const authContext = useContext(AuthContext);\n    const { authenticate, messagge, registerUser } = authContext;\n\n    // In case that a user has registered or there is a duplicate register\n    useEffect(() => {\n        if(authenticate) {\n            props.history.push('/projects');\n        }\n        if(messagge) {\n            console.log(messagge);\n            showAlert(messagge.msg, messagge.category);\n        }\n        // eslint-disable-next-line\n    }, [authenticate, messagge, props.history]);\n\n    // State for login\n    const [ user, saveUser ] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirm: ''\n    });\n\n    // Extract user\n    const { name, email, password, confirm } = user;\n\n    // To keep track of user input\n    const handleChange = e => {\n        saveUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    // when user wants to login\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        // Validation of empty fields\n        if(name.trim() === '' || email.trim() === '' || password.trim() === '' || confirm.trim() === '') {\n            showAlert('All fields are mandatory', 'alerta-error');\n            return;\n        }\n\n        // Validation of password with a minimum of 6 chars\n        if(password.length < 6) {\n            showAlert('Password must be at least 6 characters', 'alerta-error');\n            return;\n        }\n\n        // Check if both passwords are the same\n        if(password !== confirm) {\n            showAlert('Passwords are not the same', 'alerta-error');\n        }\n\n        // Pass the value\n        registerUser({\n            name,\n            email, \n            password\n        })\n    }\n    \n\n    return ( \n        <div className=\"form-usuario\">\n            { alert ? ( <div className={`alerta ${alert.category}`}>{alert.msg}</div>): null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Create an account</h1>\n\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Your Name\"\n                            value={name}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Your email\"\n                            value={email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Your password\"\n                            value={password}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirm\">Confirm Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm\"\n                            name=\"confirm\"\n                            placeholder=\"Confirm Password\"\n                            value={confirm}\n                            onChange={handleChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input type=\"submit\" className=\"btn btn-primario btn-block\"\n                        value=\"Register\" /> \n                    </div>\n                </form>\n\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Return to login\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default NewAccount;","import { createContext } from 'react';\n\nconst projectContext = createContext();\n\nexport default projectContext;","import React, { useState, useContext } from 'react';\nimport projectContext from '../../context/projects/projectContext';\n\nconst NewProject = () => {\n\n    // Get state of form\n    const projectsContext = useContext(projectContext);\n    const { form, errorform, showForm, addProject, showError } = projectsContext;\n\n    // State for the project\n    const [ project, saveProject ] = useState({\n        name: ''\n    });\n\n    const { name } = project\n    // Keep track of the form inputs\n    const onChangeProject = e => {\n        saveProject({\n            ...project,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    // When user wants to add a new project\n    const onSubmitProject = e => {\n        e.preventDefault();\n\n        // Validation\n        if (name.trim() === \"\") {\n            showError(true)\n            return;\n        }\n\n        showError(false)\n\n        // Update state\n        addProject(project);\n\n        // Reset form\n        saveProject({\n            name: ''\n        })\n\n    }\n\n    return ( \n        <>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={() => showForm()}\n            >Create a new project</button>\n\n            {\n                form\n                ? \n                    (\n                        <form\n                            className=\"formulario-nuevo-proyecto\"\n                            onSubmit={onSubmitProject}\n                        >\n                            <input\n                                type=\"text\"\n                                className=\"input-text\"\n                                placeholder=\"Name of the project\"\n                                name=\"name\"\n                                value={name}\n                                onChange={onChangeProject}\n                            />\n\n                            <input \n                                type=\"submit\"\n                                className=\"btn btn-primario btn-block\"\n                                value=\"Add new Project\"\n                            />\n                \n                        </form>\n                    )\n                : null }\n            { errorform ? <p className=\"mensaje error\">The name of the project is mandatory</p> : null}\n        </>\n     );\n}\n \nexport default NewProject;","import { createContext } from 'react';\n\nconst taskContext = createContext();\n\nexport default taskContext;","import React, { useContext } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst SingleProjects = ( { project } ) => {\n\n    // Get state of project\n    const projectsContext = useContext(projectContext);\n    const {  actualProject } = projectsContext;\n    \n    // Get state of tasks\n    const tasksContext = useContext(taskContext);\n    const {  getTasks } = tasksContext;\n\n    // Show selected project and tasks\n    const selectProject = id => {\n        actualProject(id); // Get the project by project id\n        getTasks(id); // Get the tasks of the project by project id\n    }\n\n    return ( \n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={ () => selectProject(project._id) }\n            >{project.name}</button>\n        </li>\n     );\n}\n \nexport default SingleProjects;","import React, { useContext, useEffect } from 'react';\nimport SingleProject from './SingleProject';\nimport projectContext from '../../context/projects/projectContext';\nimport AlertContext from '../../context/alerts/alertContext';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst ListProjects = () => {\n\n    // Extract projects from initial state\n    const projectsContext = useContext(projectContext);\n    const { projects, messagge, getProjects } = projectsContext;\n\n    const alertContext = useContext(AlertContext);\n    const { alert, showAlert } = alertContext;\n\n\n    // Get projects when component get's loaded\n    useEffect(() => {\n\n        if(messagge) {\n            showAlert(messagge.msg, messagge.category)\n        }\n\n        getProjects();\n    // eslint-disable-next-line\n    }, [messagge]);\n\n    // Check if there is anything inside projects\n    if( projects.length === 0 ) return <p>Start creating a new project!</p>;\n\n    return ( \n\n        <ul className=\"listado-proyectos\">\n            { alert ? (<div className={`alert {alert.category}`}>{alert.msg}</div>): null}\n            <TransitionGroup>\n            {projects.map( project => (\n                <CSSTransition\n                    key={project._id}\n                    timeout={200}\n                    className=\"proyecto\"\n                >\n                    <SingleProject \n                        project={project} \n                    />\n                </CSSTransition>\n            ))}\n            </TransitionGroup>\n        </ul>\n\n    );\n}\n \nexport default ListProjects;","import React from 'react';\nimport NewProject from '../projects/NewProject';\nimport ListProjects from '../projects/ListProjects';\n\nconst Sidebar = () => {\n    return ( \n        <aside>\n            <h1>MERN<span>Tasks</span></h1>\n\n            <NewProject />\n\n            <div className=\"proyectos\">\n                <h2>Your Projects</h2>\n\n                <ListProjects />\n                \n            </div>\n        </aside>\n     );\n}\n \nexport default Sidebar;","import React, { useContext } from 'react';\nimport AuthContext from '../../context/authentication/authContext';\n\nconst Bar = () => {\n    \n    // Extract data from token\n    const authContext = useContext(AuthContext);\n\n    const { user, logOut } = authContext;\n\n    return ( \n        <header className=\"app-header\">\n            {user ? <p className=\"nombre-usuario\">Hello <span>{user.name}</span></p> : null}\n\n            <nav className=\"nav-principal\">\n                <button\n                    className=\"btn btn-blank cerrar-sesion\"\n                    onClick={logOut}\n                >Log out</button>\n\n            </nav>\n        </header>\n     );\n}\n \nexport default Bar;","import React, { useState, useContext, useEffect } from 'react';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst FormTask = () => {\n\n    // Extract project from state\n    const projectsContext = useContext(projectContext);\n    const { project } = projectsContext;\n\n    // Get state of tasks of project\n    const tasksContext = useContext(taskContext);\n    const { errortask, selectedtask, addTask, validateTask, updateTask } = tasksContext;\n\n    // State of form input\n    const [ task, saveTask ] = useState({\n        name: ''\n    })\n\n    // Effect that detects if there is a selected task\n    useEffect( () => {\n        if(selectedtask) {\n            saveTask(selectedtask)\n        }\n        // eslint-disable-next-line\n    }, [ selectedtask ]);\n\n    // Get values from task\n    const { name } = task;\n\n    if(!project) return null;\n\n    // Read values of the form\n    const handleChange = e => {\n        saveTask({\n            ...task,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // Add a new task\n    const onSubmit = e => {\n\n        e.preventDefault();\n\n        // Validation\n        if(name.trim() === \"\") {\n            validateTask(true);\n            return;\n        }\n\n        validateTask(false);\n        \n        // Pass validation\n        task.projectId = project._id;\n\n        // Check if editing or adding\n        if(selectedtask) { // editing\n            updateTask(task);\n        }  else { // new task\n            addTask(task);\n        }\n\n        // Re-initialize form\n        saveTask({\n            name: ''\n        });\n\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Task name ...\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={selectedtask ? 'Edit Task' : 'Add Task'}\n                    />\n                </div>\n            </form>\n\n            {errortask ? <p className=\"mensaje error\">The task name is mandatory</p> : null}\n        </div>\n     );\n}\n \nexport default FormTask;","import React, { useContext } from 'react';\nimport taskContext from '../../context/tasks/taskContext';\n\nconst Task = ( { task } ) => {\n\n    // Get state of tasks of project\n    const tasksContext = useContext(taskContext);\n    const { deleteTask, updateTask, saveActualTask } = tasksContext;\n\n\n    // Function that modifies the state of a task\n    const changeState = task => {\n        if(task.state) {\n            task.state = false;\n        } else {\n            task.state = true;\n        }\n        updateTask(task);\n    }\n\n\n    return ( \n        <li className=\"tarea sombre\">\n            <p>{task.name}</p>\n\n            <div className=\"estado\">\n                {task.state\n                ?\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                            onClick={() => changeState(task)}\n                        >Complete</button>\n                    )\n                :\n                    (\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                            onClick={() => changeState(task)}\n                        >Incomplete</button>\n                    )\n                }\n            </div>\n\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => saveActualTask(task)}\n                >Edit</button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={() => deleteTask(task._id, task.projectId)}\n                >Delete</button>\n            </div>\n        </li>\n        \n     );\n}\n \nexport default Task;","import React, { useContext } from 'react';\nimport Task from './Task';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nconst ListTask = () => {\n\n    // Get state of projects\n    const projectsContext = useContext(projectContext);\n    const { project, deleteProject } = projectsContext;\n\n    // Get state of tasks of project\n    const tasksContext = useContext(taskContext);\n    const { projecttasks } = tasksContext;\n\n    if(!project) return <h2>Select a project</h2>;\n\n    return ( \n        <>\n            <h2>Project: {project.name}</h2>\n\n            <ul className=\"listado-tareas\">\n                {projecttasks.length === 0\n                    ? (<li className=\"tarea\"><p>There are no tasks</p></li>)\n                    : <TransitionGroup>\n                        {\n                            projecttasks.map( task => (\n                                <CSSTransition\n                                    key={task._id}\n                                    timeout={100}\n                                    className=\"tarea\"\n                                >\n                                    <Task \n                                        task={task}\n                                    />\n                                </CSSTransition>\n                            ))\n                        }     \n                    </TransitionGroup>\n                }\n\n            </ul>\n\n            <button\n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={() => deleteProject(project._id)}\n            >Delete Project &times;</button>\n        </>\n     );\n}\n \nexport default ListTask;","import React, { useContext, useEffect } from 'react';\nimport Sidebar from '../layout/Sidebar';\nimport Bar from '../layout/Bar';\nimport FormTask from '../tasks/FormTask';\nimport ListTask from '../tasks/ListTask';\nimport AuthContext from '../../context/authentication/authContext';\n\nconst Projects = () => {\n\n    // Extract data from token\n    const authContext = useContext(AuthContext);\n\n    const { authenticateUser } = authContext;\n\n    useEffect(() => {\n        authenticateUser();\n        // eslint-disable-next-line\n    }, []);\n\n    return ( \n        <div className=\"contenedor-app\">\n            <Sidebar />\n\n            <div className=\"seccion-principal\">\n\n                <Bar />\n\n                <main>\n                    <FormTask />\n\n                    <div className=\"contenedor-tareas\">\n                        <ListTask />\n                    </div>\n                </main>\n            </div>\n        </div>\n\n     );\n}\n \nexport default Projects;","export const FORM_PROJECT = 'FORM_PROJECT';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const VALIDATE_FORM = 'VALIDATE_FORM';\nexport const ACTUAL_PROJECT = 'ACTUAL_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\nexport const PROJECT_ERROR = 'PROJECT_ERROR';\n\nexport const TASK_PROJECT = 'TASK_PROJECT';\nexport const ADD_TASK = 'ADD_TASK';\nexport const VALIDATE_TASK = 'VALIDATE_TASK';\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const TASK_STATE = \"TASK_STATE\";\nexport const ACTUAL_TASK = \"ACTUAL_TASK\";\nexport const MODIFY_TASK = \"MODIFY_TASK\";\n\n\nexport const SHOW_ALERT = \"SHOW_ALERT\";\nexport const HIDE_ALERT = \"HIDE_ALERT\";\n\n\nexport const SUCCESSFUL_REGISTRATION = \"SUCCESSFUL_REGISTRATION\";\nexport const ERROR_REGISTRATION = \"ERROR_REGISTRATION\";\nexport const GET_USER = \"GET_USER\";\nexport const SUCCESSFUL_LOGIN = \"SUCCESSFUL_LOGIN\";\nexport const ERROR_LOGIN = \"ERROR_LOGIN\";\nexport const LOG_OUT = \"LOG_OUT\";\n\n","import { FORM_PROJECT, GET_PROJECTS, ADD_PROJECT, VALIDATE_FORM, ACTUAL_PROJECT, DELETE_PROJECT, PROJECT_ERROR } from '../../types';\n\n\nexport default (state, action) => {\n    switch(action.type) {\n        case FORM_PROJECT:\n            return {\n                ...state,\n                form: true\n            }\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            }\n        case ADD_PROJECT:\n            return {\n                ...state,\n                projects: [action.payload, ...state.projects],\n                form: false\n            }\n        case VALIDATE_FORM:\n            return {\n                ...state,\n                errorform: action.payload\n            }\n        case ACTUAL_PROJECT:\n            return {\n                ...state,\n                project: state.projects.filter(project => project._id === action.payload)[0]\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(project => project._id !==  action.payload),\n                project: null\n            }\n        case PROJECT_ERROR:\n            return {\n                ...state,\n                messagge: action.payload\n            }\n        default:\n            return state;\n    }\n}","import axios from 'axios';\n\nconst clientAxios = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clientAxios;\n\n","import React, { useReducer } from 'react';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport { ADD_PROJECT, FORM_PROJECT, GET_PROJECTS, VALIDATE_FORM, ACTUAL_PROJECT, DELETE_PROJECT, PROJECT_ERROR } from '../../types';\nimport clientAxios from '../../config/axios'\n\nconst ProjectState = props => {\n\n    const initialState = {\n        projects : [],\n        form: false,\n        errorform: false,\n        project: null,\n        messagge: null\n    }\n\n    // Dispatch for run actions\n    const [ state, dispatch ] = useReducer(projectReducer, initialState);\n\n    // Show form for creating a new project\n    const showForm = () => {\n        dispatch({\n            type: FORM_PROJECT\n        })\n    }\n\n    // Get Projects\n    const getProjects = async () => {\n        try {\n            const response = await clientAxios.get('/api/projects');\n\n            dispatch({\n                type: GET_PROJECTS,\n                payload: response.data.projects\n            })\n\n        } catch (error) {\n            console.log(error.response)\n            const alert = {\n                msg: 'There was an error',\n                category: 'alerta-error'\n            }\n\n            dispatch({\n                type: PROJECT_ERROR,\n                payload: alert\n            })\n        }\n    }\n\n    // Add new project\n    const addProject = async project => {\n\n        try {\n            const response = await clientAxios.post('/api/projects', project);\n            console.log(response);\n\n            dispatch({\n                type: ADD_PROJECT,\n                payload: response.data\n            })\n\n        } catch (error) {\n            console.log(error.response)\n            const alert = {\n                msg: 'There was an error',\n                category: 'alerta-error'\n            }\n\n            dispatch({\n                type: PROJECT_ERROR,\n                payload: alert\n            })\n        }\n    }\n\n    // Validate form for errors\n    const showError = state => {\n        dispatch({\n            type: VALIDATE_FORM,\n            payload: state\n        })\n    }\n\n    // Select a project\n    const actualProject = projectId => {\n        dispatch({\n            type: ACTUAL_PROJECT,\n            payload: projectId\n        })\n    }\n\n    // Delete a project\n    const deleteProject = async projectId => {\n        try {\n            await clientAxios.delete(`/api/projects/${projectId}`);\n\n            dispatch({\n                type: DELETE_PROJECT,\n                payload: projectId\n            })\n\n        } catch (error) {\n            console.log(error.response)\n            const alert = {\n                msg: 'There was an error',\n                category: 'alerta-error'\n            }\n\n            dispatch({\n                type: PROJECT_ERROR,\n                payload: alert\n            })\n        }\n    }\n\n    return (\n        <projectContext.Provider\n        value={{\n            projects: state.projects,\n            form: state.form,\n            errorform: state.errorform,\n            project: state.project,\n            messagge: state.messagge,\n            showForm,\n            getProjects,\n            addProject,\n            showError,\n            actualProject,\n            deleteProject\n        }}>\n            {props.children}\n        </projectContext.Provider>\n    )\n\n}\n\nexport default ProjectState;","import { TASK_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK, TASK_STATE, ACTUAL_TASK, MODIFY_TASK } from '../../types';\n\nexport default ( state, action ) => {\n    switch(action.type) {\n        case TASK_PROJECT:\n            return {\n                ...state,\n                projecttasks : action.payload\n            }\n        case ADD_TASK:\n            return {\n                ...state,\n                projecttasks : [action.payload, ...state.projecttasks]\n            }\n        case VALIDATE_TASK:\n            return {\n                ...state,\n                errortask: action.payload \n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                projecttasks : state.projecttasks.filter(task => task._id !== action.payload)\n            }\n        case MODIFY_TASK:\n            return {\n                ...state,\n                projecttasks: state.projecttasks.map(task => task._id === action.payload._id ? action.payload : task),\n                selectedtask: null\n            }\n        case ACTUAL_TASK:\n            return {\n                ...state,\n                selectedtask: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport taskContext from './taskContext';\nimport TaskReducer from './TaskReducer';\nimport { TASK_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK, ACTUAL_TASK, MODIFY_TASK } from '../../types';\nimport clientAxios from '../../config/axios';\n\nconst TaskState = props => {\n    \n    const initialState = {\n        projecttasks : [],\n        errortask: false,\n        selectedtask: null\n    }\n\n    // Create dispatch and state\n    const [ state, dispatch ] = useReducer(TaskReducer, initialState);\n\n    // Get tasks from a project\n    const getTasks = async projectId => {\n        try {\n            const response = await clientAxios.get('/api/tasks', { params: { projectId } });\n\n            dispatch({\n                type: TASK_PROJECT,\n                payload: response.data.tasks\n            })\n\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    // Add a new task\n    const addTask = async task => {\n\n        try {\n            \n            const response = await clientAxios.post('./api/tasks', task);\n\n            dispatch({\n                type: ADD_TASK,\n                payload: response.data\n            })\n\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    // Validate and shows an error\n    const validateTask = state => {\n        dispatch({\n            type: VALIDATE_TASK,\n            payload: state\n        })\n    }\n\n    // Delete a task\n    const deleteTask = async (taskId, projectId) => {\n        try {\n            \n            await clientAxios.delete(`/api/tasks/${taskId}`, { params: { projectId } });\n            \n            dispatch({\n                type: DELETE_TASK,\n                payload: taskId\n            })\n\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    // Change state of task\n    const updateTask = async task => {\n        try {\n            const response = await clientAxios.put(`/api/tasks/${task._id}`, task );\n\n            dispatch({\n                type: MODIFY_TASK,\n                payload: response.data.task\n            })\n        } catch (error) {\n            console.log(error.response);\n        }\n    }\n\n    // Extract task for edit\n    const saveActualTask = task => {\n        dispatch({\n            type: ACTUAL_TASK,\n            payload: task\n        })\n    }\n\n    return (\n        <taskContext.Provider\n            value={{\n                projecttasks: state.projecttasks,\n                errortask: state.errortask,\n                selectedtask: state.selectedtask,\n                getTasks,\n                addTask,\n                validateTask,\n                deleteTask,\n                updateTask,\n                saveActualTask\n            }}\n        >\n            {props.children}\n        </taskContext.Provider>    \n    )\n}\n\nexport default TaskState;","import { SHOW_ALERT, HIDE_ALERT } from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case SHOW_ALERT:\n            return {\n                alert: action.payload\n            }\n        case HIDE_ALERT:\n            return {\n                alert: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport alertContext from './alertContext';\nimport alertReducer from './alertReducer';\n\nimport { SHOW_ALERT, HIDE_ALERT } from '../../types';\n\nconst AlertState = props => {\n    \n    const initialState = {\n        alert: null\n    }\n\n    const [ state, dispatch ] = useReducer(alertReducer, initialState);\n\n    // Functions\n    const showAlert = (msg, category) => {\n        dispatch({\n            type: SHOW_ALERT,\n            payload: {\n                msg,\n                category\n            }\n        });\n\n        // After 5sec, remove alert\n        setTimeout( () => {\n            dispatch({\n                type: HIDE_ALERT\n            })\n        }, 5000);\n\n    }\n    \n    return (\n        <alertContext.Provider\n            value={{\n                alert: state.alert,\n                showAlert\n            }}\n        >\n            {props.children}\n        </alertContext.Provider>\n    )\n}\n\nexport default AlertState;","import { SUCCESSFUL_REGISTRATION, ERROR_REGISTRATION, GET_USER, SUCCESSFUL_LOGIN, ERROR_LOGIN, LOG_OUT } from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case SUCCESSFUL_LOGIN:\n        case SUCCESSFUL_REGISTRATION:\n            \n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                authenticate: true,\n                messagge: null,\n                loading: false\n            }\n            \n        case GET_USER:\n            return {\n                ...state,\n                authenticate: true,\n                user: action.payload,\n                loading: false\n            }\n        case LOG_OUT:\n        case ERROR_REGISTRATION:\n        case ERROR_LOGIN:\n            localStorage.removeItem('token');\n\n            return {\n                ...state,\n                token: null,\n                user: null,\n                authenticate: null,\n                messagge: action.payload,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import clientAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token) {\n        clientAxios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete clientAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport { SUCCESSFUL_REGISTRATION, ERROR_REGISTRATION, GET_USER, SUCCESSFUL_LOGIN, ERROR_LOGIN, LOG_OUT } from '../../types';\n\nimport clientAxios from '../../config/axios';\nimport tokenAuth from '../../config/tokenAuth'\n\nconst AuthState = props => {\n\n    const initialState = {\n        token: localStorage.getItem('token'),\n        authenticate: null,\n        user: null,\n        messagge: null,\n        loading: true\n    }\n\n    const [ state, dispatch ] = useReducer(AuthReducer, initialState);\n\n    // Functions\n\n    // Register a new user\n    const registerUser = async data => {\n        try {\n            const response = await clientAxios.post('/api/users', data);\n            console.log(response.data);\n\n            dispatch({\n                type: SUCCESSFUL_REGISTRATION,\n                payload: response.data\n            });\n\n            // Get user\n            authenticateUser();\n\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n\n            dispatch({\n                type: ERROR_REGISTRATION,\n                payload: alert\n            });\n        }\n    }\n\n    // Return the authenticated user\n    const authenticateUser = async() => {\n        const token = localStorage.getItem('token');\n        if(token) {\n            tokenAuth(token)\n        }\n\n        try {\n            const response = await clientAxios.get('/api/auth');\n            \n            dispatch({\n                type: GET_USER,\n                payload: response.data.user\n            })\n        } catch (error) {\n            dispatch({\n                type: ERROR_LOGIN\n            })\n        }\n    }\n\n    // When the user logs in\n    const logIn = async data => {\n        try {\n            const response = await clientAxios.post('/api/auth', data);\n\n            dispatch({\n                type: SUCCESSFUL_LOGIN,\n                payload: response.data\n            });\n\n            // Get user\n            authenticateUser();\n\n        } catch (error) {\n            const alert = {\n                msg: error.response.data.msg,\n                category: 'alerta-error'\n            }\n            // In case the password does not contains 6 characters\n            if(!error.response.data.msg) {\n                alert.msg = error.response.data.errors[0].msg\n            }\n            \n            dispatch({\n                type: ERROR_LOGIN,\n                payload: alert\n            });\n        }\n    }\n\n    // Log out\n    const logOut = () => {\n        dispatch({\n            type: LOG_OUT\n        })\n    }\n\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                authenticate: state.authenticate,\n                user: state.user,\n                messagge: state.messagge,\n                loading: state.loading,\n                registerUser,\n                authenticateUser,\n                logIn,\n                logOut\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AutchContext from '../../context/authentication/authContext';\n\nconst PrivateRoute = ({ component: Component, ...props }) => {\n    \n    const authContext = useContext(AutchContext);\n    const { authenticate, loading, authenticateUser } = authContext;\n\n    useEffect(() => {\n        authenticateUser()\n        // eslint-disable-next-line\n    }, []);\n\n    return (  \n        <Route {...props } render={props => !authenticate && !loading ? (\n            <Redirect to=\"/\" />\n        ) : (\n            <Component {...props} />\n        ) }\n        />\n    );\n}\n \nexport default PrivateRoute;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NewAccount from './components/auth/NewAccount';\nimport Projects from './components/projects/Projects';\n\nimport ProjectState from './context/projects/ProjectState';\nimport TaskState from './context/tasks/TaskState';\nimport AlertState from './context/alerts/alertState';\nimport AuthState from './context/authentication/authState';\nimport tokenAuth from './config/tokenAuth';\nimport PrivateRoute from './components/routes/PrivateRoute';\n\n// Check if we have a token\nconst token = localStorage.getItem('token');\nif(token) {\n  tokenAuth(token);\n}\n\nfunction App() {\n\n  return (\n    <ProjectState>\n      <TaskState>\n        <AlertState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/new-account\" component={NewAccount} />\n                <PrivateRoute exact path=\"/projects\" component={Projects} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertState>\n      </TaskState>\n    </ProjectState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}